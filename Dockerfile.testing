# vim: set ft=dockerfile:

# Best to compile and test as non-root
ARG nonroot_uid=3973

##------------------------------------------------------------------------------
FROM python:3.6 AS py36

RUN echo "${PYTHON_VERSION}" > /tmp/py36-latest

##------------------------------------------------------------------------------
FROM python:3.7 AS py37

RUN echo "${PYTHON_VERSION}" > /tmp/py37-latest

##------------------------------------------------------------------------------
FROM python:3.8 AS py38

RUN echo "${PYTHON_VERSION}" > /tmp/py38-latest

##------------------------------------------------------------------------------
FROM python:3.9 AS py39

RUN echo "${PYTHON_VERSION}" > /tmp/py39-latest

##------------------------------------------------------------------------------
FROM centos:7 AS base

RUN yum clean all \
 && yum update -y \
 && yum install -y \
        nmap-ncat \
        unixODBC \
 && yum clean all \
 && rm -rf /var/yum/cache

##------------------------------------------------------------------------------
FROM base AS builder-base

RUN yum install -y \
        make \
        yum-utils

RUN yum-builddep -y python3

# For pyodbc
RUN yum install -y \
        unixODBC-devel

RUN mkdir /src

##------------------------------------------------------------------------------
FROM builder-base AS builder-py36
ARG py_ver=36
ARG nonroot_uid
COPY --from=py36 /tmp/py${py_ver}-latest /tmp/

RUN mkdir /opt/py${py_ver} && chown -R ${nonroot_uid} /opt/py${py_ver} /src
USER ${nonroot_uid}
WORKDIR /tmp

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && curl --silent --show-error --fail --location \
        "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
    | tar -xz

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && cd "/tmp/Python-${PYTHON_VERSION}" \
 && ./configure --prefix=/opt/py${py_ver} \
 && make install

USER root
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
RUN pip3 install tox
USER ${nonroot_uid}

ENV HOME=/src
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
WORKDIR /src

ADD django_informixdb_vault/ /src/django_informixdb_vault/
ADD README.rst setup.* tox.ini /src/
RUN tox -e "$(tox --listenvs | grep py${py_ver} | tr '\n' ',')" --notest  # prep venvs

##------------------------------------------------------------------------------
FROM builder-base AS builder-py37
ARG py_ver=37
ARG nonroot_uid
COPY --from=py37 /tmp/py${py_ver}-latest /tmp/

RUN mkdir /opt/py${py_ver} && chown -R ${nonroot_uid} /opt/py${py_ver} /src
USER ${nonroot_uid}
WORKDIR /tmp

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && curl --silent --show-error --fail --location \
        "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
    | tar -xz

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && cd "/tmp/Python-${PYTHON_VERSION}" \
 && ./configure --prefix=/opt/py${py_ver} \
 && make install

USER root
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
RUN pip3 install tox
USER ${nonroot_uid}

ENV HOME=/src
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
WORKDIR /src

ADD django_informixdb_vault/ /src/django_informixdb_vault/
ADD README.rst setup.* tox.ini /src/
RUN tox -e "$(tox --listenvs | grep py${py_ver} | tr '\n' ',')" --notest  # prep venvs

##------------------------------------------------------------------------------
FROM builder-base AS builder-py38
ARG py_ver=38
ARG nonroot_uid
COPY --from=py38 /tmp/py${py_ver}-latest /tmp/

RUN mkdir /opt/py${py_ver} && chown -R ${nonroot_uid} /opt/py${py_ver} /src
USER ${nonroot_uid}
WORKDIR /tmp

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && curl --silent --show-error --fail --location \
        "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
    | tar -xz

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && cd "/tmp/Python-${PYTHON_VERSION}" \
 && ./configure --prefix=/opt/py${py_ver} \
 && make install

USER root
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
RUN pip3 install tox
USER ${nonroot_uid}

ENV HOME=/src
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
WORKDIR /src

ADD django_informixdb_vault/ /src/django_informixdb_vault/
ADD README.rst setup.* tox.ini /src/
RUN tox -e "$(tox --listenvs | grep py${py_ver} | tr '\n' ',')" --notest  # prep venvs

##------------------------------------------------------------------------------
FROM builder-base AS builder-py39
ARG py_ver=39
ARG nonroot_uid
COPY --from=py39 /tmp/py${py_ver}-latest /tmp/

RUN mkdir /opt/py${py_ver} && chown -R ${nonroot_uid} /opt/py${py_ver} /src
USER ${nonroot_uid}
WORKDIR /tmp

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && curl --silent --show-error --fail --location \
        "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" \
    | tar -xz

RUN export PYTHON_VERSION="$(cat /tmp/py${py_ver}-latest)" \
 && cd "/tmp/Python-${PYTHON_VERSION}" \
 && ./configure --prefix=/opt/py${py_ver} \
 && make install

USER root
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
RUN pip3 install tox
USER ${nonroot_uid}

ENV HOME=/src
ENV PATH=/opt/py${py_ver}/bin:"${PATH}"
WORKDIR /src

ADD django_informixdb_vault/ /src/django_informixdb_vault/
ADD README.rst setup.* tox.ini /src/
RUN tox -e "$(tox --listenvs | grep py${py_ver} | tr '\n' ',')" --notest  # prep venvs

##------------------------------------------------------------------------------
FROM base AS csdk
ARG nonroot_uid

COPY --chown=${nonroot_uid} \
     --from=ibmcom/informix-developer-sandbox@sha256:678250715879a7cbdd2ea658ff7ecd7087dcaf0b8e39d47c936916edff62c5ec \
        /home/informix/odbc/ /opt/IBM/informix/

##------------------------------------------------------------------------------
FROM csdk AS multipy
ARG nonroot_uid

COPY --from=builder-py36 /opt/py36/ /opt/py36/
COPY --from=builder-py36 /src/.tox/ /src/.tox/
COPY --from=builder-py36 /src/.cache/ /src/.cache/

COPY --from=builder-py37 /opt/py37/ /opt/py37/
COPY --from=builder-py37 /src/.tox/ /src/.tox/
COPY --from=builder-py37 /src/.cache/ /src/.cache/

COPY --from=builder-py38 /opt/py38/ /opt/py38/
COPY --from=builder-py38 /src/.tox/ /src/.tox/
COPY --from=builder-py38 /src/.cache/ /src/.cache/

COPY --from=builder-py39 /opt/py39/ /opt/py39/
COPY --from=builder-py39 /src/.tox/ /src/.tox/
COPY --from=builder-py39 /src/.cache/ /src/.cache/

ADD wait-for-deps.sh /usr/local/bin
RUN chmod a+rx /usr/local/bin/wait-for-deps.sh

ADD --chown=${nonroot_uid} README.rst setup.* tox.ini .pylintrc /src/
ADD --chown=${nonroot_uid} django_informixdb_vault/ /src/django_informixdb_vault/
ADD --chown=${nonroot_uid} test/ /src/test/
RUN chown ${nonroot_uid} /src

ENV PATH=/opt/py39/bin:/opt/py38/bin:/opt/py37/bin:/opt/py36/bin:"${PATH}"
RUN pip3 --no-cache-dir install tox

USER ${nonroot_uid}
ENV HOME=/src
WORKDIR /src
