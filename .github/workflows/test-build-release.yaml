---
name: Test and Release

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        shell: bash
        run: |
          set -euo pipefail
          ./test-in-docker.sh

  build:
    runs-on: ubuntu-latest
    outputs:
      version: "${{ steps.version.outputs.version }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get next version
        uses: reecetech/version-increment@2024.10.1
        id: version
        with:
          scheme: semver

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Should match Pipfile / "python_version"

      - name: Build package
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${{ steps.version.outputs.version }}"
          echo "VERSION = '${VERSION}'" > django_informixdb_vault/version.py
          pip install "setuptools>=62.2.0"
          python3 setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 3
          include-hidden-files: true

  release:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist  # the name of the artefact from the `build` step
          path: dist/

      - name: Release version on GitHub
        uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false
          automatic_release_tag: "${{ needs.build.outputs.version }}"

      - name: Release version on PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          print_hash: true

# vim: set sw=2:
